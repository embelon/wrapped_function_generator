--- 
# information
project: 
  title: "Function generator"
  description: "arbitary function generator, using shared RAM as the output data"
  picture: docs/function_generator.png
  author: "Matt Venn"
  license: LICENSE

# optional interfaces you want to use: gpio, la1, la2, la3, irq, clk2, wishbone & openram
interfaces: ['gpio', 'wishbone', 'openram']

# test within caravel
caravel_test:
  recipe: "coco_test"
  gl_recipe: "coco_test_gl"
  directory: "caravel_function_generator"
  id: 1
  module_name: "wrapped_function_generator"
  instance_name: "wrapped_function_generator"

# module test
module_test:
  recipe: "all" 
  directory: "function_generator"
  makefile: "Makefile"

# run the wrapper formal proof
wrapper_proof:
  directory: "."
  sby: "properties.sby"

# openlane config, used in case I need to re-harden
openlane:
  config: "config.tcl"

# source required for various configs and module instantiation
source:
    - wrapper.v
    - function_generator/src/generator.v

# gds - check nothing on metal 5, DRC & LVS
gds:
  directory: "gds"
  gds_filename: "wrapped_function_generator.gds"
  lvs_filename: "wrapped_function_generator.lvs.powered.v"
  lef_filename: "wrapped_function_generator.lef"
